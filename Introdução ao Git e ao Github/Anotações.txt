link para download : https://    $git-scm.com/downloads

O Git Bash é um terminal  extendido para otimizar o uso do Git.

Comandos

Ajuda:
    $git help

Setar usuário:
    $git config --global user.name "Rafael Souza"

Setar email:
    $git config --global user.email exemplo@mail.com

Setar editor:
    $git config --global core.editor vim

Setar ferramenta de merge:
    $git config --global merge.tool vimdiff

Listar configurações:
    $git config --list

Criar novo repositório:
    $git init

Verificar estado dos arquivos/diretórios:
    $git status

Adicionar um arquivo em específico:
    $git add meu_arquivo.txt

Adicionar um diretório em específico:
    $git add meu_diretorio

Adicionar todos os arquivos/diretórios:
    $git add .	

Comitar um arquivo:
    $git commit arquivo.txt

Comitar vários arquivos:
    $git commit arquivo.txt outro_arquivo.txt

Comitar informando mensagem:
    $git commit arquivo.txt -m "mensagem de commit"

Remover arquivo:
    $git rm arquivo.txt

Remover diretório:
    $git rm -r diretorio

Exibir histórico:
    $git log

Exibir histórico com diff das duas últimas alterações:
    $git log -p -2

Exibir histório de um arquivo específico:
    $git log -- <caminho_arquivo>

Exibir histórico de um arquivo específico que contêm uma determinada palavra:
    $git log --summary -S<palavra> [<caminho_arquivo>]

Exibir histórico modificação de um arquivo:
    $git log --diff-filter=M -- <caminho_arquivo>

Desfazendo alteração local (working directory):
    $git checkout -- arquivo.txt

Desfazendo alteração local (staging area):
    $git reset HEAD arquivo.txt

A alteração do diretório pode ser realizada através do comando abaixo:
    $git checkout meu_arquivo.txt
    
Exibir os repositórios remotos:
    $git remote
    $git remote -v

Exibir informações dos repositórios remotos:
    $git remote show origin

Renomear um repositório remoto:
    $git remote rename origin nome-rep

Desvincular um repositório remoto:
    $git remote rm nome-rep

Enviar arquivos/diretórios para o repositório remoto:
    $git push -u origin master

Os demais pushes não precisam dessa informação:
    $git push

Atualizar os arquivos no branch atual:
    $git pull

Buscar as alterações, mas não aplica-las no branch atual:
    $git fetch

Clonar um repositório remoto já existente:
    $git clone 'link do repositorio'

Criando uma tag leve:
    $git tag vs-1.1

Criando uma tag anotada:
    $git tag -a vs-1.1 -m "Minha versão 1.1"

Criando uma tag assinada:
    $git tag -s vs-1.1 -m "Tag assinada 1.1"

Criando tag a partir de um commit (hash):
    $git tag -a vs-1.2 9fceb02

Criando tags no repositório remoto:
    $git push origin vs-1.2
    
Criando todas as tags locais no repositório remoto:
    $git push origin --tags

Criando um novo branch:
    $git branch correcao-bug

Trocando para um branch existente:
    $git checkout correcao-bug
    
Criar um novo branch e trocar:
    $git checkout -b correcao-bug2

Voltar para o branch principal (master):
    $git checkout master

Resolver merge entre os branches:
    $git merge correcao-bug

Apagando um branch:
    $git branch -d correcao-bug

Listar branches:
    $git branch

Listar branches com informações dos últimos commits:
    $git branch -v

Listar branches que já foram fundidos (merged) com o master:
    $git branch --merged

Listar branches que não foram fundidos (merged) com o master:
    $git branch --no-merged

Criando um branch remoto com o mesmo nome:
    $git push origin correcao-bug

Criando um branch remoto com nome diferente:
    $git push origin correcao-bug:new-branch

Baixar um branch remoto para edição:
    $git checkout -b correcao-bug origin/correcao-bug

Apagar branch remoto:
    $git push origin:correcao-bug

Fazendo o rebase entre um o branch correcao-bug e o master:
    $git checkout experiment
    $git rebase master

Criar um stash:
    $git stash

Listar stashes:
    $git stash list

Voltar para o último stash:
    $git stash apply

Voltar para um stash específico:
    $git stash apply stash@{2}

Criar um branch a partir de um stash:
    $git stash branch minha_branch

Alterando mensagens de commit:
    $git commit --amend -m "Nova mensagem"

Alterando os três últimos commits:
    $git rebase -i HEAD~3
    ~Edite os commits
    $git commit –amend -m “Nova mensagem”
    $git rebase --continue